# name: linting, testing, and building
# run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
# on:
#   push:
#     branches: [master]
#   pull_request:
#     branches: [master]
# jobs:
#   pipeline:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [18.x]
#     steps:
#       - uses: actions/checkout@v2
#       - name: Staring Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}
#       - name: install modules
#         run: npm install
#       - name: build production project
#         run: npm run build:prod
#         if: always()
#       - name: linting typescript
#         run: npm run lint:ts
#         if: always()
#       - name: linting css
#         run: npm run lint:scss
#         if: always()
#       - name: unit testing
#         run: npm run test:unit
#         if: always()
#       - name: build storybook
#         run: npm run build-storybook
#       # - name: screenshot testing
#       #   run: npm run chromatic

name: linting, testing, building and deployment
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  contents: write

jobs:
  pipeline:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v2
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: install modules
        run: npm install --legacy-peer-deps
      - name: build production project
        run: npm run build:prod
        if: always()
      - name: linting typescript
        run: npm run lint:ts
        if: always()
      - name: linting css
        run: npm run lint:scss
        if: always()
      - name: unit testing
        run: npm run test:unit
        if: always()
      - name: build storybook
        run: npm run build-storybook
        if: always()
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          branch: gh-pages
          clean: true # –æ—á–∏—â–∞—Ç—å —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã

# name: Deploy React App to GitHub Pages
# run-name: ${{ github.actor }} is deploying to GitHub Pages üöÄ
# on:
#   push:
#     branches: [master]
#   pull_request:
#     branches: [master]

# permissions:
#   contents: write
#   pages: write
#   id-token: write

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     environment:
#       name: github-pages
#       url: ${{ steps.deployment.outputs.page_url }}
#     strategy:
#       matrix:
#         node-version: [18.x]
#     steps:
#       - uses: actions/checkout@v2
#       - name: Staring Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}
#       - name: Install modules
#         run: npm install --legacy-peer-deps
#       - name: Build production project
#         run: npm run build:prod
#       - name: Linting typescript
#         run: npm run lint:ts
#         if: always()
#       - name: Linting css
#         run: npm run lint:scss
#         if: always()
#       - name: Unit testing
#         run: npm run test:unit
#         if: always()
#       - name: Build storybook
#         run: npm run build-storybook
#         if: always()
#       - name: Deploy to GitHub Pages
#         uses: JamesIves/github-pages-deploy-action@v4
#         with:
#           folder: dist # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤–∞—à–µ–π –ø–∞–ø–∫–µ —Å–±–æ—Ä–∫–∏
#           branch: gh-pages
