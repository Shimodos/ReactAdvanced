# name: linting, testing, and building
# run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
# on:
#   push:
#     branches: [master]
#   pull_request:
#     branches: [master]
# jobs:
#   pipeline:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [18.x]
#     steps:
#       - uses: actions/checkout@v2
#       - name: Staring Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}
#       - name: install modules
#         run: npm install
#       - name: build production project
#         run: npm run build:prod
#         if: always()
#       - name: linting typescript
#         run: npm run lint:ts
#         if: always()
#       - name: linting css
#         run: npm run lint:scss
#         if: always()
#       - name: unit testing
#         run: npm run test:unit
#         if: always()
#       - name: build storybook
#         run: npm run build-storybook
#       # - name: screenshot testing
#       #   run: npm run chromatic

# name: linting, testing, building and deployment
# run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
# on:
#   push:
#     branches: [master]
#   pull_request:
#     branches: [master]

# permissions:
#   contents: write

# jobs:
#   pipeline:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [18.x]
#     steps:
#       - uses: actions/checkout@v2
#       - name: Staring Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}
#       - name: install modules
#         run: npm install --legacy-peer-deps
#       - name: build production project
#         run: npm run build:prod
#         if: always()
#       - name: linting typescript
#         run: npm run lint:ts
#         if: always()
#       - name: linting css
#         run: npm run lint:scss
#         if: always()
#       - name: unit testing
#         run: npm run test:unit
#         if: always()
#       - name: build storybook
#         run: npm run build-storybook
#         if: always()
#       - name: Deploy
#         uses: JamesIves/github-pages-deploy-action@v4
#         with:
#           folder: dist
#           branch: gh-pages
#           clean: true # –æ—á–∏—â–∞—Ç—å —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã

name: Build and Deploy
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 18.x

      - name: Install dependencies üì¶
        run: npm install --legacy-peer-deps

      - name: Build üîß
        run: npm run build:prod
        env:
          NODE_ENV: production

      - name: Deploy to GitHub Pages üöÄ
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist # –ø–∞–ø–∫–∞, –æ—Ç–∫—É–¥–∞ –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –¥–µ–ø–ª–æ–π
          branch: gh-pages # –≤–µ—Ç–∫–∞, –∫—É–¥–∞ –±—É–¥–µ—Ç –¥–µ–ª–∞—Ç—å—Å—è –¥–µ–ø–ª–æ–π
          clean: true # –æ—á–∏—â–∞—Ç—å —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã
